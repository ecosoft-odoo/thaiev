<odoo noupdate="1">
    <!-- Purchase Request -->
    <!-- PR Tier#1 -->
    <record id="pr_tier_1" model="tier.definition">
        <field name="name">PR Tier#1</field>
        <field name="model_id" ref="purchase_request.model_purchase_request" />
        <field name="sequence">20</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# PR's Manager
rec.env["hr.employee"].search(
[
    ("department_id", "in", rec.requested_by.employee_ids.mapped("department_id").ids),
    ("job_id.name", "=", "Manager")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[]</field>
        <field name="has_comment">True</field>
        <field
            name="server_action_id"
            ref="thaiev_config.ir_server_action_pr_approve"
        />
        <field
            name="rejected_server_action_id"
            ref="thaiev_config.ir_server_action_pr_reject"
        />
    </record>
    <!-- PR Tier#2 -->
    <record id="pr_tier_2" model="tier.definition">
        <field name="name">PR Tier#2</field>
        <field name="model_id" ref="purchase_request.model_purchase_request" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# PR's Director
rec.env["hr.employee"].search(
[
    ("department_id", "in", rec.requested_by.employee_ids.mapped("department_id").ids),
    ("job_id.name", "=", "Director")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[]</field>
        <field name="has_comment">True</field>
        <field
            name="server_action_id"
            ref="thaiev_config.ir_server_action_pr_approve"
        />
        <field
            name="rejected_server_action_id"
            ref="thaiev_config.ir_server_action_pr_reject"
        />
    </record>

    <!-- Purchase Order -->
    <!-- PO Tier#1 -->
    <record id="po_tier_1" model="tier.definition">
        <field name="name">PO Tier#1</field>
        <field name="model_id" ref="purchase.model_purchase_order" />
        <field name="sequence">20</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# PO's Manager
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Purchase"),
    ("job_id.name", "=", "Manager")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[]</field>
        <field name="has_comment">True</field>
        <field
            name="server_action_id"
            ref="thaiev_config.ir_server_action_po_approve"
        />
        <field
            name="rejected_server_action_id"
            ref="thaiev_config.ir_server_action_po_reject"
        />
    </record>
    <!-- PO Tier#2 (Amount <= 100,000) -->
    <record id="po_tier_2_1" model="tier.definition">
        <field name="name">PO Tier#2</field>
        <field name="model_id" ref="purchase.model_purchase_order" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# PO's Director
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Purchase"),
    ("job_id.name", "=", "Director")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount_total", "&lt;=", 100000)]</field>
        <field name="has_comment">True</field>
        <field
            name="server_action_id"
            ref="thaiev_config.ir_server_action_po_approve"
        />
        <field
            name="rejected_server_action_id"
            ref="thaiev_config.ir_server_action_po_reject"
        />
    </record>
    <!-- PO Tier#2 (Amount > 100,000) -->
    <record id="po_tier_2_2" model="tier.definition">
        <field name="name">PO Tier#2</field>
        <field name="model_id" ref="purchase.model_purchase_order" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# CEO
rec.env["hr.employee"].search(
[
    ("job_id.name", "=", "CEO")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount_total", "&gt;", 100000)]</field>
        <field name="has_comment">True</field>
        <field
            name="server_action_id"
            ref="thaiev_config.ir_server_action_po_approve"
        />
        <field
            name="rejected_server_action_id"
            ref="thaiev_config.ir_server_action_po_reject"
        />
    </record>

    <!-- Payment -->
    <!-- Payment Tier#1 (Amount <= 50000) -->
    <record id="payment_tier_1_1" model="tier.definition">
        <field name="name">Payment Tier#1</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">20</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# Accounting Manager
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Accounting"),
    ("job_id.name", "=", "Manager")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount", "&lt;=", 50000)]</field>
        <field name="has_comment">True</field>
    </record>
    <!-- Payment Tier#1 (Amount > 50000 and Amount <= 100000) -->
    <record id="payment_tier_1_2" model="tier.definition">
        <field name="name">Payment Tier#1</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">20</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# Accounting Director
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Accounting"),
    ("job_id.name", "=", "Director")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field
            name="definition_domain"
        >[("amount", "&gt;", 50000), ("amount", "&lt;=", 100000)]</field>
        <field name="has_comment">True</field>
    </record>
    <!-- Payment Tier#1 (Amount > 100000) -->
    <record id="payment_tier_1_3" model="tier.definition">
        <field name="name">Payment Tier#1</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">20</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# CFO
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Accounting"),
    ("job_id.name", "=", "CFO")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount", "&gt;", 100000)]</field>
        <field name="has_comment">True</field>
    </record>
    <!-- Payment Tier#2 (Amount <= 50000) -->
    <record id="payment_tier_2_1" model="tier.definition">
        <field name="name">Payment Tier#2</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# Accounting Director
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Accounting"),
    ("job_id.name", "=", "Director")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount", "&lt;=", 50000)]</field>
        <field name="has_comment">True</field>
    </record>
    <!-- Payment Tier#2 (Amount > 50000 and amount <= 100000) -->
    <record id="payment_tier_2_2" model="tier.definition">
        <field name="name">Payment Tier#2</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# CFO
rec.env["hr.employee"].search(
[
    ("department_id.name", "=", "Accounting"),
    ("job_id.name", "=", "CFO")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field
            name="definition_domain"
        >[("amount", "&gt;", 50000), ("amount", "&lt;=", 100000)]</field>
        <field name="has_comment">True</field>
    </record>
    <!-- Payment Tier#2 (amount > 100000) -->
    <record id="payment_tier_2_3" model="tier.definition">
        <field name="name">Payment Tier#2</field>
        <field name="model_id" ref="account.model_account_payment" />
        <field name="sequence">10</field>
        <field name="approve_sequence">True</field>
        <field name="review_type">expression</field>
        <field name="reviewer_expression">
# CEO
rec.env["hr.employee"].search(
[
    ("job_id.name", "=", "CEO")
]).mapped("user_id")
        </field>
        <field name="definition_type">domain</field>
        <field name="definition_domain">[("amount_total", "&gt;", 100000)]</field>
        <field name="has_comment">True</field>
    </record>
</odoo>
